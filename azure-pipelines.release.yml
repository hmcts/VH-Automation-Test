parameters:
  - name: deploymentBranch
    displayName: Branch to Deploy
    type: string
    default: refs/heads/master

  - name: environment
    displayName: Environment
    type: string
    default: Sandbox
    values:
      - Preview
      - Dev
      - AAT
      - Sandbox
      - Test1
      - Test2
      - Demo
      - Preprod
      - Prod

  # - name: RunZap
    # displayName: Execute ZAP Tests
    # type: boolean
    # default: false

  # - name: runACTests
    # displayName: Run Smoke Checks
    # type: boolean
    # default: true

  - name: prodEnvs
    displayName: Environments Using Prod Subscription
    type: object
    default:
      - Prod
      - Preprod

# Set variables once
variables:
  - group: vh-domains-and-urls
  - group: vh-apps-settings-generic
 # - group: VH-Automation-Test
#  - group: vh test users
  - group: QuickLinks_Common
  - group: Saucelabs
  - ${{ if ne(variables['Build.Reason'], 'ResourceTrigger') }}:
      - ${{ if containsValue(parameters.prodEnvs, parameters.environment) }}:
          - group: vh-prod
      - ? ${{ if not(containsValue(parameters.prodEnvs, parameters.environment)) }}
        : - group: vh-preview
  - ${{ if eq(variables['Build.Reason'], 'ResourceTrigger') }}:
      - ? ${{ if or(startswith(variables['Build.SourceBranch'], 'refs/heads/release/'), startswith(variables['Build.SourceBranch'], 'refs/heads/hotfix/')) }}
        : - group: vh-prod
      - ? ${{ if not(or(startswith(variables['Build.SourceBranch'], 'refs/heads/release/'), startswith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'))) }}
        : - group: vh-preview

trigger: none
pr: none

pool:
  name: 'vh-self-hosted'

resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts

steps:
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: PublishTestResults@2
  condition: succeededOrFailed()