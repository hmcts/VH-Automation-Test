parameters:
  - name: deploymentBranch
    displayName: Branch to Deploy
    type: string
    default: refs/heads/master

  - name: environment
    displayName: Environment
    type: string
    default: AAT
    values:
      - Preview
      - Dev
      - AAT
      - Sandbox
      - Test1
      - Test2
      - Demo
      - Preprod
      - Prod

  - name: prodEnvs
    displayName: Environments Using Prod Subscription
    type: object
    default:
      - Prod
      - Preprod

# Set variables once
variables:
  - name: System.Debug
    value: true
  - name: buildConfiguration
    value: Debug

  - group: vh-domains-and-urls
  - group: vh-apps-settings-generic
  - group: vh-video-web
  - group: vh test users
  - group: QuickLinks_Common
  - group: Saucelabs
  - ${{ if ne(variables['Build.Reason'], 'ResourceTrigger') }}:
      - ${{ if containsValue(parameters.prodEnvs, parameters.environment) }}:
          - group: vh-prod
      - ? ${{ if not(containsValue(parameters.prodEnvs, parameters.environment)) }}
        : - group: vh-preview
  - ${{ if eq(variables['Build.Reason'], 'ResourceTrigger') }}:
      - ? ${{ if or(startswith(variables['Build.SourceBranch'], 'refs/heads/release/'), startswith(variables['Build.SourceBranch'], 'refs/heads/hotfix/')) }}
        : - group: vh-prod
      - ? ${{ if not(or(startswith(variables['Build.SourceBranch'], 'refs/heads/release/'), startswith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'))) }}
        : - group: vh-preview
#  - group: vh-video-web-nonprod
#    env:
#      - Preview
#      - Dev
#      - Demo
#      - AAT
#      - Sandbox
#      - Test1
#      - Test2
    
#  - group: vh-video-web-preprod
#    env:
#      - Preprod
#  - group: vh-video-web-prod
#    env:
#      - Prod
  # Feature Toggle
  - name: FeatureToggle:SDK-Key
    value: vh-admin-web-Feature-Toggle
#    secret: true

  # AzureAd
  - name: AzureAd:ClientId
    value: vh-admin-web-appid-v2
#    secret: true
  - name: AzureAd:ClientSecret
    value: vh-admin-web-key-v2
#    secret: true
#  - name: AzureAd:PostLogoutRedirectUri
#    slot:
#      deployment:
#        value: $(admin_web_url_staging)logout
#      active:
#        value: $(admin_web_url)logout
#  - name: AzureAd:RedirectUri
#    slot:
#      deployment:
#        value: $(admin_web_url_staging)home
#      active:
#        value: $(admin_web_url)home
  - name: AzureAd:TenantId
    value: tenantid
#    secret: true
              
  # Testing
  - name: TestUserSecrets:TestUsernameStem
    value: $(TestUserSecrets:TestUsernameStem)

  # VhServices
  - name: VhServices:BookingsApiResourceId
    value: vh-bookings-api-identifieruris
#    secret: true
  - name: VhServices:BookingsApiUrl
    value: $(bookings_api_url)
  - name: VhServices:UserApiResourceId
    value: vh-user-api-identifieruris
#    secret: true
  - name: VhServices:UserApiUrl
    value: $(user_api_url)
  - name: VhServices:VideoApiResourceId
    value: vh-video-api-identifieruris
#    secret: true
  - name: VhServices:VideoApiUrl
    value: $(video_api_url)
  - name: VhServices:NotificationApiResourceId
    value: vh-notification-api-identifieruris
#    secret: true
  - name: VhServices:NotificationApiUrl
    value: $(notification_api_url)
  - name: VhServices:ValidateEmail
    value: $(reformemail)
  - name: VhServices:VideoWebUrl
    value: $(video_web_url)
  - name: VhServices:LaunchDarklyClientId
    value: vh-launchdarkly-client-id
#    secret: true
  # SauceLabs
  - name: Saucelabs:Username
    value: $(Saucelabs:Username)
  - name: Saucelabs:AccessKey
    value: $(Saucelabs:AccessKey)
  - name: Saucelabs:RealDeviceApiKey
    value: $(RealDeviceApiKey)
  # Ejud - test setting only
  - name: UsingEjud
    value: $(UsingEjud)

  - name: VhServices:AdminWebUrl
    value: $(admin_web_url_staging)
  - name: VhServices:AdminWebResourceId
    value: vh-admin-web-identifieruris
 #   secret: true
  - name: VhServices:VideoApiUrl
    value: $(video_api_url)
  - name: VhServices:VideoApiResourceId
    value: vh-video-api-identifieruris
  #  secret: true
  - name: VhServices:UserApiUrl
    value: $(user_api_url)
  - name: VhServices:UserApiResourceId
    value: vh-user-api-identifieruris
#        secret: true
  - name: VhServices:TestApiUrl
    value: $(test_api_url)
  - name: VhServices:TestApiResourceId
    value: vh-test-api-identifieruris
#    secret: true  
  - name: VhServices:BookingsApiUrl
    value: $(bookings_api_url)
  - name: VhServices:BookingsApiResourceId
    value: vh-bookings-api-identifieruris
#    secret: true
  - name: VhServices:NotificationApiResourceId
    value: vh-notification-api-identifieruris
#    secret: true
  - name: VhServices:LaunchDarklyClientId
    value: vh-launchdarkly-client-id
#    secret: true
  - name: VhServices:NotificationApiUrl
    value: $(notification_api_url)

trigger: none
pr: none

#resources:
#  pipelines:
#    - pipeline: Release
#      source: hmcts.vh-automation-test
#      trigger:
#        branches:
#          - master
#          - hotfix/*
#          - release/*
        
pool:
  name: 'vh-self-hosted'

steps:
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: PublishTestResults@2
  condition: succeededOrFailed()
- task: PublishBuildArtifacts@1
  condition: succeededOrFailed()
  displayName: Test API Results
  inputs:
    PathtoPublish: $(System.DefaultWorkingDirectory)/API/RestSharpAPI/TestResults
    artifactName: ApIResults
- task: PublishBuildArtifacts@1
  condition: succeededOrFailed()
  displayName: Test UI Results
  inputs:
    PathtoPublish: $(System.DefaultWorkingDirectory)/UI/Selenium/TestResults
    artifactName: UIResults