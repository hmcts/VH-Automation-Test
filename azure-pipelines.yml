trigger:
  branches:
    include:
    - master
    - release/*
    - hotfix/*
    - FinalPipeline

pool:
  name: 'vh-self-hosted'

variables:
  buildConfiguration: 'Release'
  artifactName: $(Build.BuildId)-AutomationTests

stages:
- stage: Build
  displayName: CI Build
  jobs:
  - job: CI_Build
    displayName: CI Build
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.0.x'

    - task: DotNetCoreCLI@2
      displayName: donet Publish
      inputs:
        command: publish
        publishWebProjects: false
        arguments: --configuration Release --output $(build.ArtifactStagingDirectory)/AutomationTests
        zipAfterPublish: false

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/AutomationTests'
        artifactName: $(artifactName)

- stage: Automation_Test
  pool:
    vmImage: windows-latest
  displayName: Automation Test
  jobs:
  - job: Automation_Test
    displayName: Automation Test
    steps:
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '6.0.x'
      - task: DownloadPipelineArtifact@2
        displayName: Download Pipeline Artifacts
        inputs:
          artifactName: $(artifactName)
          targetPath: $(Pipeline.Workspace)/AutomationTests
      
      - powershell: | 
          Get-ChildItem "$(Pipeline.Workspace)/AutomationTests" -Recurse
      
      - task: DotNetCoreCLI@2
        inputs:
          command: test
          publishTestResults: true
          workingDirectory: $(Pipeline.Workspace)/AutomationTests
          projects: '$(Pipeline.Workspace)/AutomationTests/*.dll'

      
      # - task: VSTest@2
      #   displayName: Run Tests
      #   inputs:
      #     testSelector: 'testAssemblies'
      #     testAssemblyVer2: |
      #       **\*test*.dll
      #       !**\*TestAdapter.dll
      #       !**\obj\**
      #     searchFolder: '$(Pipeline.Workspace)/AutomationTests/UI'
      #     resultsFolder: '$(Agent.TempDirectory)/TestResultsUI'

      # - task: PublishTestResults@2
      #   inputs:
      #     testResultsFormat: 'VSTest'
      #     testResultsFiles: '$(Agent.TempDirectory)/TestResultsUI/*.*'
